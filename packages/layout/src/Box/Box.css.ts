import {
  RESPONSIVE_STYLE_PROPS,
  createStyleProps,
  defineStyleProps,
  tokens,
} from "@telegraph/style-engine";

const boxProperties = defineStyleProps({
  properties: {
    backgroundColor: tokens.color,
    borderBottomWidth: tokens.spacing,
    borderColor: tokens.color,
    borderLeftWidth: tokens.spacing,
    borderRadius: tokens.rounded,
    borderRadiusBottomLeft: tokens.rounded,
    borderRadiusBottomRight: tokens.rounded,
    borderRadiusTopLeft: tokens.rounded,
    borderRadiusTopRight: tokens.rounded,
    borderRightWidth: tokens.spacing,
    borderStyle: tokens["border-style"],
    borderTopWidth: tokens.spacing,
    borderWidth: tokens.spacing,
    boxShadow: tokens.shadow,
    display: [
      "block",
      "inline-block",
      "inline",
      "flex",
      "inline-flex",
      "grid",
      "none",
    ],
    height: tokens.spacing,
    margin: tokens.spacing,
    marginBottom: tokens.spacing,
    marginLeft: tokens.spacing,
    marginRight: tokens.spacing,
    marginTop: tokens.spacing,
    maxHeight: tokens.spacing,
    maxWidth: tokens.spacing,
    padding: tokens.spacing,
    paddingBottom: tokens.spacing,
    paddingLeft: tokens.spacing,
    paddingRight: tokens.spacing,
    paddingTop: tokens.spacing,
    width: tokens.spacing,
    zIndex: tokens.zIndex,
  },
  shorthands: {
    bg: ["backgroundColor"],
    borderBottom: ["borderBottomWidth"],
    borderLeft: ["borderLeftWidth"],
    borderRight: ["borderRightWidth"],
    borderTop: ["borderTopWidth"],
    borderX: ["borderLeftWidth", "borderRightWidth"],
    borderY: ["borderTopWidth", "borderBottomWidth"],
    h: ["height"],
    m: ["margin"],
    maxH: ["maxHeight"],
    maxW: ["maxWidth"],
    mb: ["marginBottom"],
    ml: ["marginLeft"],
    mr: ["marginRight"],
    mt: ["marginTop"],
    mx: ["marginLeft", "marginRight"],
    my: ["marginTop", "marginBottom"],
    p: ["padding"],
    pb: ["paddingBottom"],
    pl: ["paddingLeft"],
    pr: ["paddingRight"],
    pt: ["paddingTop"],
    px: ["paddingLeft", "paddingRight"],
    py: ["paddingTop", "paddingBottom"],
    rounded: ["borderRadius"],
    roundedBottom: ["borderRadiusBottomRight", "borderRadiusBottomLeft"],
    roundedBottomLeft: ["borderRadiusBottomLeft"],
    roundedBottomRight: ["borderRadiusBottomRight"],
    roundedLeft: ["borderRadiusTopLeft", "borderRadiusBottomLeft"],
    roundedRight: ["borderRadiusTopRight", "borderRadiusBottomRight"],
    roundedTop: ["borderRadiusTopLeft", "borderRadiusTopRight"],
    roundedTopLeft: ["borderRadiusTopLeft"],
    roundedTopRight: ["borderRadiusTopRight"],
    shadow: ["boxShadow"],
    w: ["width"],
  },
  ...RESPONSIVE_STYLE_PROPS,
});

export const stylePropsFn = createStyleProps(boxProperties);
export type StyleProps = Parameters<typeof stylePropsFn>[0];
